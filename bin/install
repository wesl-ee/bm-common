#!/usr/bin/perl
use strict;
use File::Basename;
use DBI;

use constant HOOYA_VERSION => '0.7';
use constant {
	FOREGROND_BLACK => '[0;30m',
	FOREGROUND_RED => '[0;31m',
	FOREGROUND_GREEN => '[0;32m',
	FOREGROUND_YELLOW => '[0;33m',
	FOREGROUND_BLUE => '[0;34m',
	FOREGROUND_MAGENTA => '[0;35m',
	FOREGROUND_CYAN => '[0;36m',
	FOREGROUND_WHITE => '[0;37m',
	FOREGROUND_DEFAULT => '[0;39m',

	BACKGROUND_BLACK => '[0;40m',
	BACKGROUND_RED => '[0;41m',
	BACKGROUND_GREEN => '[0;42m',
	BACKGROUND_YELLOW => '[0;43m',
	BACKGROUND_BLUE => '[0;44m',
	BACKGROUND_MAGENTA => '[0;45m',
	BACKGROUND_CYAN => '[0;46m',
	BACKGROUND_WHITE => '[0;47m',
	BACKGROUND_DEFAULT => '[0;49m',

	TEXT_RESET => '[0;0m',
	TEXT_BOLD => '[0;1m',
	TEXT_STANDOUT => '[0;3m',
	TEXT_BLINK => '[0;5m',
	TEXT_REVERSE => '[0;7m',
};
sub die_error
{
	die FOREGROUND_RED . @_[0] . FOREGROUND_DEFAULT . "\n";
}
sub notify_success
{
	print FOREGROUND_GREEN . @_[0] . FOREGROUND_DEFAULT . "\n";
}
sub notify_warn
{
	print FOREGROUND_YELLOW . @_[0] . FOREGROUND_DEFAULT . "\n";
}

print FOREGROUND_GREEN
	. "bigmike common v" . HOOYA_VERSION
	. " installer\n"
. FOREGROUND_DEFAULT;

print TEXT_BOLD
	. "Please ensure you have installed all the necessary"
	. " components first!\n"
. TEXT_RESET;

# Read SQL settings from the config file
my ($CONFIG_DB_SERVER,
$CONFIG_DB_USERNAME,
$CONFIG_DB_PASSWORD,
$CONFIG_DB_DATABASE);

# Grab the PHP config file for accessing SQL
my $incfile =  dirname($0) . "/../includes/config.php";
open(FILE, $incfile);
while (<FILE>) {
	$CONFIG_DB_SERVER = $1 if (/["']CONFIG_DB_SERVER["'], ["'](.+)["']/);
	$CONFIG_DB_USERNAME = $1 if (/"CONFIG_DB_USERNAME", ["'](.+)["']/);
	$CONFIG_DB_PASSWORD = $1 if (/["']CONFIG_DB_PASSWORD["'], ["'](.+)["']/);
	$CONFIG_DB_DATABASE = $1 if (/["']CONFIG_DB_DATABASE["'], ["'](.+)["']/);
}
close(FILE);

# Jack in
# SQL
my $dsn = "DBI:mysql:database=" . $CONFIG_DB_DATABASE
. ";host=" . $CONFIG_DB_SERVER;
my $dbh = DBI->connect(
	$dsn,
	$CONFIG_DB_USERNAME,
	$CONFIG_DB_PASSWORD,
	{'PrintError' => 0}
);
my $sth;
if (!defined $dbh) {
	die_error DBI::errstr;
}

# Database creation
$sth = $dbh->prepare(
	"CREATE DATABASE bigmike"
);
if ($sth->execute) {
	notify_success "Created the `bigmike` database";
}
else {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"USE bigmike;"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}

# Table creation
$sth = $dbh->prepare(
	"CREATE TABLE `users` ("
	. "`id` INT(11) AUTO_INCREMENT,"
	. "`username` VARCHAR(20) DEFAULT NULL,"
	. "`password` VARCHAR(128) DEFAULT NULL,"
	. "`signup_date` DATETIME DEFAULT CURRENT_TIMESTAMP,"
	. "`last_login` DATETIME DEFAULT CURRENT_TIMESTAMP,"
	. "`last_ip` VARCHAR(45) DEFAULT '' NOT NULL,"
	. "`locked` CHAR(1) DEFAULT 'n',"
	. "`failed_logins` INT(11) DEFAULT '0',"
	. "`pref_css` VARCHAR(64) DEFAULT 'bigmike',"
	. "`workmode` VARCHAR(2) DEFAULT 'no',"
	. "`invited_by` VARCHAR(40) DEFAULT NULL,"
	. "PRIMARY KEY (`id`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `invites` ("
	. "`hash` VARCHAR(128) NOT NULL,"
	. "`ownerid` INT(11) DEFAULT NULL,"
	. "`date_created` DATETIME DEFAULT CURRENT_TIMESTAMP,"
	. "PRIMARY KEY (`hash`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
$sth = $dbh->prepare(
	"CREATE TABLE `identity` ("
	. "`id` VARCHAR(128) NOT NULL,"
	. "`address` VARCHAR(128) NOT NULL DEFAULT '',"
	. "`user_agent` VARCHAR(128) NOT NULL DEFAULT '',"
	. "`last_activity` DATETIME DEFAULT CURRENT_TIMESTAMP,"
	. "PRIMARY KEY (`address`, `user_agent`)"
	. ") ENGINE=InnoDB DEFAULT CHARSET=utf8"
);
if (!$sth->execute) {
	notify_warn DBI::errstr;
}
notify_success "Created the SQL structure";
